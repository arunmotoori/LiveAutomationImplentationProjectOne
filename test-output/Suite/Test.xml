<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="1" hostname="ArunMotoori" failures="0" tests="30" name="Test" time="12.943" errors="0" timestamp="2025-01-11T13:17:36 IST">
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="11.34">
    <failure type="org.openqa.selenium.NoSuchElementException" message="Unable to locate element: Register
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: &amp;apos;4.27.0&amp;apos;, revision: &amp;apos;d6e718d134&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.4&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [960dfe11-e3f2-4788-b8f0-d426f6edd85e, findElement {using=link text, value=Register}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 134.0, moz:accessibilityChecks: false, moz:buildID: 20241230151726, moz:debuggerAddress: 127.0.0.1:1690, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 5144, moz:profile: C:\Users\arunm\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:1690/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 960dfe11-e3f2-4788-b8f0-d426f6edd85e">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: Register
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.4'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [960dfe11-e3f2-4788-b8f0-d426f6edd85e, findElement {using=link text, value=Register}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 134.0, moz:accessibilityChecks: false, moz:buildID: 20241230151726, moz:debuggerAddress: 127.0.0.1:1690, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 5144, moz:profile: C:\Users\arunm\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:1690/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 960dfe11-e3f2-4788-b8f0-d426f6edd85e
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.isDisplayed(Unknown Source)
at utils.ElementUtilities.isElementDisplayedOnPage(ElementUtilities.java:41)
at utils.ElementUtilities.clickOnElement(ElementUtilities.java:16)
at pages.HeaderOptions.selectRegisterOption(HeaderOptions.java:112)
at tests.Register.setup(Register.java:127)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.Register" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingMandatoryFields" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingMandatoryFields -->
  <testcase classname="tests.Register" name="verifyThankYourConfirmationEmailOnSuccessfulRegistration" time="0.0">
    <skipped/>
  </testcase> <!-- verifyThankYourConfirmationEmailOnSuccessfulRegistration -->
  <testcase classname="tests.Register" name="verifyRegistringAccountUsingAllFields" time="0.066">
    <skipped/>
  </testcase> <!-- verifyRegistringAccountUsingAllFields -->
  <testcase classname="tests.Register" name="verifyWarningMessageOfMandatoryFieldsInRegisterAccountPage" time="0.002">
    <skipped/>
  </testcase> <!-- verifyWarningMessageOfMandatoryFieldsInRegisterAccountPage -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountBySubscribingToNewsletter" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountBySubscribingToNewsletter -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountByNotSubscribingToNewsletter" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountByNotSubscribingToNewsletter -->
  <testcase classname="tests.Register" name="verifyDifferentWaysOfNavigatingToRegisterAccountPage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyDifferentWaysOfNavigatingToRegisterAccountPage -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountByProvidingMismatchedPasswords" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountByProvidingMismatchedPasswords -->
  <testcase classname="tests.Register" name="verifyRegisterAccountWithExistingEmailAddress" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountWithExistingEmailAddress -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingInvalidEmail" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingInvalidEmail -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingInvalidTelephoneNumber" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingInvalidTelephoneNumber -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingKeyboardKeys" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingKeyboardKeys -->
  <testcase classname="tests.Register" name="verifyRegisterAccountPagePlaceholders" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountPagePlaceholders -->
  <testcase classname="tests.Register" name="verifyMandatoryFieldsInRegisterAccountPage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyMandatoryFieldsInRegisterAccountPage -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountByEnteringOnlySpaces" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountByEnteringOnlySpaces -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingPasswordsWhichAreNotFollowingPasswordComplexityStandards -->
  <testcase classname="tests.Register" name="verifyHeightWidthNumberOfCharacters" time="0.0">
    <skipped/>
  </testcase> <!-- verifyHeightWidthNumberOfCharacters -->
  <testcase classname="tests.Register" name="verifyRegisterAccountUsingLeadingAndTrailingSpaces" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountUsingLeadingAndTrailingSpaces -->
  <testcase classname="tests.Register" name="verifyRegisterAccountPrivacyPolicyField" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountPrivacyPolicyField -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountWithoutSelectingPrivacyPolicyCheckboxField" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithoutSelectingPrivacyPolicyCheckboxField -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountPasswordFieldsForSecurity" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountPasswordFieldsForSecurity -->
  <testcase classname="tests.Register" name="verifyRegisterAccountPageNavigations" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountPageNavigations -->
  <testcase classname="tests.Register" name="verifyRegisteringAccountWithoutEnteringConfirmationPassword" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithoutEnteringConfirmationPassword -->
  <testcase classname="tests.Register" name="verifyRegisterAccountPageBreadcrumbURLTitleHeading" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountPageBreadcrumbURLTitleHeading -->
  <testcase classname="tests.Register" name="verifyRegisterAccountUI" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountUI -->
  <testcase classname="tests.Register" name="verifyRegisterAccountInAllEnvironments" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountInAllEnvironments -->
  <testcase classname="tests.Register" name="verifyDataBaseTestingForRegisterAccount" time="0.0">
    <ignored/>
  </testcase> <!-- verifyDataBaseTestingForRegisterAccount -->
</testsuite> <!-- Test -->
